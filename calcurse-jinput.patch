diff --git a/src/calcurse.c b/src/calcurse.c
index c89d1dd..21e2ec0 100644
--- a/src/calcurse.c
+++ b/src/calcurse.c
@@ -886,3 +886,116 @@ int main(int argc, char **argv)
 		count = 0;
 	}
 }
+
+inline bool is_jleap_year(unsigned year)
+{
+  if (year % 4 == 0 && year % 100 != 0) {
+    return true;
+  }
+  if (year % 400 == 0 && year % 100 == 0) {
+    return true;
+  }
+
+  return false;
+}
+
+inline bool is_leap_year(unsigned year)
+{
+   return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
+}
+
+inline unsigned dey_jan_diff(unsigned year)
+{
+  if (is_jleap_year(year)) {
+    return 11;
+  }
+  return 10;
+}
+
+struct date to_jalali(const struct date * gregorian)
+{
+  unsigned days_sum;
+  if (is_jleap_year(gregorian->yyyy)) {
+    const unsigned DAY_SUM_JLEAP[] = {0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335};
+    days_sum = DAY_SUM_JLEAP[gregorian->mm-1]+gregorian->dd;
+  } else {
+    const unsigned DAY_SUM[] = {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};
+    days_sum = DAY_SUM[gregorian->mm-1]+gregorian->dd;
+  }
+  struct date date;
+  if (days_sum < 79) {
+    days_sum = days_sum + dey_jan_diff(gregorian->yyyy);
+    int jalali_year = gregorian->yyyy - 622;
+    if (days_sum % 30 == 0) {
+        date.yyyy = jalali_year;
+        date.dd = 30;
+        date.mm = (days_sum / 30) + 9;
+    } else {
+        date.yyyy = jalali_year;
+        date.dd = days_sum % 30;
+        date.mm = (days_sum / 30) + 10;
+    }
+  } else {
+    days_sum = days_sum - 79;
+    int jalali_year = gregorian->yyyy - 621;
+
+    if (days_sum <= 186) {
+      if (days_sum % 31 == 0) {
+        date.dd = 31;
+        date.yyyy = jalali_year;
+        date.mm = days_sum / 31;
+      } else {
+        date.dd = days_sum % 31;
+        date.yyyy = jalali_year;
+        date.mm = (days_sum / 31) + 1;
+      }
+    } else {
+      days_sum = days_sum - 186;
+      if (days_sum % 30 == 0) {
+        date.dd = 30;
+        date.yyyy = jalali_year;
+        date.mm = (days_sum / 30) + 6;
+      } else {
+        date.dd = days_sum % 30;
+        date.yyyy = jalali_year;
+        date.mm = (days_sum / 30) + 7;
+      }
+    }
+  }
+  return date;
+}
+
+struct date to_gregorian(const struct date * jalali)
+{
+  struct date gregorian;
+  gregorian.yyyy = jalali->yyyy + 621;
+  gregorian.dd = 0;
+  gregorian.mm = 0;
+  const unsigned march_day_diff = is_leap_year(gregorian.yyyy) ? 12 : 11;
+  unsigned day_count = (jalali->mm >= 1 && jalali->mm <= 6) ? 
+  (jalali->mm-1)*31+jalali->dd :
+  (6*31) + (jalali->mm - 7) * 30 + jalali->dd;
+  unsigned gregorian_months[12] = {30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 28, 31};;
+  unsigned gregorian_months_leap[12] = {30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31};;
+  unsigned * months = is_leap_year(gregorian.yyyy) ? gregorian_months_leap : gregorian_months;
+
+  if (day_count < march_day_diff) {
+    gregorian.dd = day_count + (31 - march_day_diff);
+    gregorian.mm = 3;
+  } else {
+    unsigned remaining_days = day_count - march_day_diff;
+    unsigned i = 0;
+    while (remaining_days > gregorian_months[i]) {
+      remaining_days -= months[i];
+      i += 1;
+    }
+    gregorian.dd = remaining_days;
+    if (i > 8) {
+      gregorian.mm = i - 8;
+      gregorian.yyyy += 1;
+    } else {
+      gregorian.mm = i + 4;
+    }
+  }
+  return gregorian;
+}
diff --git a/src/calcurse.h b/src/calcurse.h
index 8322416..4d086bc 100644
--- a/src/calcurse.h
+++ b/src/calcurse.h
@@ -1362,6 +1362,8 @@ void wins_status_bar(void);
 void wins_erase_status_bar(void);
 void wins_other_status_page();
 void wins_reset_status_page(void);
+struct date to_gregorian(const struct date * jalali);
+struct date to_jalali(const struct date * gregorian);
 
 /* queue.c */
 void que_init(void);
diff --git a/src/ui-day.c b/src/ui-day.c
index 6a038fa..936bc0a 100644
--- a/src/ui-day.c
+++ b/src/ui-day.c
@@ -809,6 +809,7 @@ static int update_rept(time_t start, long dur, struct rpt **rpt, llist_t *exc,
 				continue;
 			}
 			struct date d = { day, month, year };
+      d = to_gregorian(&d);
 			nrpt.until = date2sec(d, 0, 0);
 		}
 		/* Conmpare days (midnights) - until-day may equal start day. */
